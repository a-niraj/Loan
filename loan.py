# -*- coding: utf-8 -*-
"""Loan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MuBjjFj3stWC_ShKw2K89DwJjHnS6anS
"""

#Imports
import pandas as pd
import os
import seaborn as sns
import matplotlib.pyplot as plt
import sklearn
from sklearn.linear_model import LinearRegression
import numpy as np

# initializing data
path  = 'bankloan.zip'
data = pd.read_csv(path)
data = data[['Age','Experience','Income','ZIP.Code','Family','CCAvg','Education','Mortgage','Personal.Loan']];
data.head(20)
data.info()

# testing dataset with the logistic regression model
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn import metrics

train_df, test_df = train_test_split(data, test_size = 0.2, random_state = 1)
train_df.head()
test_df.head()

x = ['Age','Experience','Income','ZIP.Code','Family','CCAvg','Education','Mortgage']
y = ['Personal.Loan']
x_train = train_df[x]
y_train = train_df[y]
x_test = test_df[x]
y_test = test_df[y]

logreg_model = linear_model.LogisticRegression()

logreg_model.fit(x_train, y_train)

y_pred = logreg_model.predict(x_test)


print("Accuracy: ", metrics.accuracy_score(y_test, y_pred))
print("Precision: ", metrics.precision_score(y_test, y_pred))
print("Recall: ", metrics.recall_score(y_test, y_pred))

#Model able to predict with an accuracy score of over 90%

# Testing same dataset with decision trees model

from sklearn import tree

for i in range(1,20):
  decisiontree = tree.DecisionTreeClassifier(max_depth = i)
  decisiontree.fit(x_train, y_train)
  y_pred = decisiontree.predict(x_test)
  print("Accuracy: ", metrics.accuracy_score(y_test, y_pred))
  print("Precision: ", metrics.precision_score(y_test, y_pred))
  print("Recall: ", metrics.recall_score(y_test, y_pred))

# Highest accuracy, precision and recall at max_depth = 3

decisiontree = tree.DecisionTreeClassifier(max_depth = 3)
decisiontree.fit(x_train, y_train)
y_pred = decisiontree.predict(x_test)
print("Accuracy: ", metrics.accuracy_score(y_test, y_pred))
print("Precision: ", metrics.precision_score(y_test, y_pred))
print("Recall: ", metrics.recall_score(y_test, y_pred))

# Accuracy much higher than logistic regression